
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /openLANE_flow/designs/sm_cpu/src/sm_register.v
Parsing SystemVerilog input from `/openLANE_flow/designs/sm_cpu/src/sm_register.v' to AST representation.
Generating RTLIL representation for module `\sm_register'.
Generating RTLIL representation for module `\sm_register_we'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /openLANE_flow/designs/sm_cpu/src/sm_cpu.vh
Parsing SystemVerilog input from `/openLANE_flow/designs/sm_cpu/src/sm_cpu.vh' to AST representation.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /openLANE_flow/designs/sm_cpu/src/sm_cpu.v
Parsing SystemVerilog input from `/openLANE_flow/designs/sm_cpu/src/sm_cpu.v' to AST representation.
Generating RTLIL representation for module `\sm_cpu'.
Generating RTLIL representation for module `\sm_control'.
Generating RTLIL representation for module `\sm_alu'.
Generating RTLIL representation for module `\sm_register_file'.
Successfully finished Verilog frontend.

4. Generating Graphviz representation of design.
Writing dot description to `/openLANE_flow/designs/sm_cpu/runs/20-05_20-11/tmp/synthesis/hierarchy.dot'.
Dumping module sm_cpu to page 1.

5. Executing HIERARCHY pass (managing design hierarchy).

5.1. Analyzing design hierarchy..
Top module:  \sm_cpu
Used module:     \sm_control
Used module:     \sm_alu
Used module:     \sm_register_file
Used module:     \sm_register

5.2. Analyzing design hierarchy..
Top module:  \sm_cpu
Used module:     \sm_control
Used module:     \sm_alu
Used module:     \sm_register_file
Used module:     \sm_register
Removing unused module `\sm_register_we'.
Removed 1 unused modules.
Mapping positional arguments of cell sm_cpu.r_pc (sm_register).

6. Executing TRIBUF pass.

7. Executing SYNTH pass.

7.1. Executing HIERARCHY pass (managing design hierarchy).

7.1.1. Analyzing design hierarchy..
Top module:  \sm_cpu
Used module:     \sm_control
Used module:     \sm_alu
Used module:     \sm_register_file
Used module:     \sm_register

7.1.2. Analyzing design hierarchy..
Top module:  \sm_cpu
Used module:     \sm_control
Used module:     \sm_alu
Used module:     \sm_register_file
Used module:     \sm_register
Removed 0 unused modules.

7.2. Executing PROC pass (convert processes to netlists).

7.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:148$16 in module sm_alu.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:112$15 in module sm_control.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/sm_cpu/src/sm_register.v:10$1 in module sm_register.
Removed a total of 0 dead cases.

7.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 7 assignments to connections.

7.2.4. Executing PROC_INIT pass (extract init attributes).

7.2.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `\sm_register.$proc$/openLANE_flow/designs/sm_cpu/src/sm_register.v:10$1'.

7.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\sm_alu.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:148$16'.
     1/1: $1\result[31:0]
Creating decoders for process `\sm_control.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:112$15'.
     1/6: $1\aluControl[2:0]
     2/6: $1\regWrite[0:0]
     3/6: $1\regDst[0:0]
     4/6: $1\condZero[0:0]
     5/6: $1\branch[0:0]
     6/6: $1\aluSrc[0:0]
Creating decoders for process `\sm_register_file.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:182$36'.
     1/3: $0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39
     2/3: $0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_DATA[31:0]$38
     3/3: $0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_ADDR[4:0]$37
Creating decoders for process `\sm_register.$proc$/openLANE_flow/designs/sm_cpu/src/sm_register.v:10$1'.
     1/1: $0\q[31:0]

7.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\sm_alu.\result' from process `\sm_alu.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:148$16'.
No latch inferred for signal `\sm_control.\regDst' from process `\sm_control.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:112$15'.
No latch inferred for signal `\sm_control.\regWrite' from process `\sm_control.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:112$15'.
No latch inferred for signal `\sm_control.\aluSrc' from process `\sm_control.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:112$15'.
No latch inferred for signal `\sm_control.\aluControl' from process `\sm_control.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:112$15'.
No latch inferred for signal `\sm_control.\branch' from process `\sm_control.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:112$15'.
No latch inferred for signal `\sm_control.\condZero' from process `\sm_control.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:112$15'.

7.2.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\sm_register_file.$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_ADDR' using process `\sm_register_file.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:182$36'.
  created $dff cell `$procdff$100' with positive edge clock.
Creating register for signal `\sm_register_file.$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_DATA' using process `\sm_register_file.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:182$36'.
  created $dff cell `$procdff$101' with positive edge clock.
Creating register for signal `\sm_register_file.$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN' using process `\sm_register_file.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:182$36'.
  created $dff cell `$procdff$102' with positive edge clock.
Creating register for signal `\sm_register.\q' using process `\sm_register.$proc$/openLANE_flow/designs/sm_cpu/src/sm_register.v:10$1'.
  created $adff cell `$procdff$103' with positive edge clock and negative level reset.

7.2.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\sm_alu.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:148$16'.
Removing empty process `sm_alu.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:148$16'.
Found and cleaned up 1 empty switch in `\sm_control.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:112$15'.
Removing empty process `sm_control.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:112$15'.
Found and cleaned up 1 empty switch in `\sm_register_file.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:182$36'.
Removing empty process `sm_register_file.$proc$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:182$36'.
Removing empty process `sm_register.$proc$/openLANE_flow/designs/sm_cpu/src/sm_register.v:10$1'.
Cleaned up 3 empty switches.

7.3. Executing FLATTEN pass (flatten design).
Deleting now unused module sm_alu.
Deleting now unused module sm_control.
Deleting now unused module sm_register_file.
Deleting now unused module sm_register.
<suppressed ~4 debug messages>

7.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.
<suppressed ~8 debug messages>

7.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..
Removed 2 unused cells and 42 unused wires.
<suppressed ~3 debug messages>

7.6. Executing CHECK pass (checking for obvious problems).
checking module sm_cpu..
found and reported 0 problems.

7.7. Executing OPT pass (performing simple optimizations).

7.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.

7.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

7.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sm_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\rf.$ternary$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$29.
Removed 1 multiplexer ports.
<suppressed ~14 debug messages>

7.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sm_cpu.
    Consolidated identical input bits for $mux cell $flatten\rf.$procmux$94:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39
      New ports: A=1'0, B=1'1, Y=$flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0]
      New connections: $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [31:1] = { $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] $flatten\rf.$0$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN[31:0]$39 [0] }
    New ctrl vector for $pmux cell $flatten\sm_control.$procmux$50: { $flatten\sm_control.$procmux$57_CMP $flatten\sm_control.$procmux$56_CMP $flatten\sm_control.$procmux$55_CMP $flatten\sm_control.$procmux$53_CMP $auto$opt_reduce.cc:134:opt_mux$105 }
    New ctrl vector for $pmux cell $flatten\sm_control.$procmux$61: $auto$opt_reduce.cc:134:opt_mux$107
    New ctrl vector for $pmux cell $flatten\sm_control.$procmux$74: $auto$opt_reduce.cc:134:opt_mux$109
    New ctrl vector for $pmux cell $flatten\alu.$procmux$42: { $flatten\alu.$procmux$47_CMP $flatten\alu.$procmux$46_CMP $flatten\alu.$procmux$45_CMP $flatten\alu.$procmux$44_CMP $flatten\alu.$procmux$43_CMP }
    New ctrl vector for $pmux cell $flatten\sm_control.$procmux$85: $auto$opt_reduce.cc:134:opt_mux$111
    New ctrl vector for $pmux cell $flatten\sm_control.$procmux$91: $auto$opt_reduce.cc:134:opt_mux$113
  Optimizing cells in module \sm_cpu.
Performed a total of 7 changes.

7.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
Removed a total of 0 cells.

7.7.6. Executing OPT_DFF pass (perform DFF optimizations).

7.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..
Removed 1 unused cells and 19 unused wires.
<suppressed ~2 debug messages>

7.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.

7.7.9. Rerunning OPT passes. (Maybe there is more to do..)

7.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sm_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

7.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sm_cpu.
Performed a total of 0 changes.

7.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
Removed a total of 0 cells.

7.7.13. Executing OPT_DFF pass (perform DFF optimizations).

7.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..

7.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.

7.7.16. Finished OPT passes. (There is nothing left to do.)

7.8. Executing FSM pass (extract and optimize FSM).

7.8.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking sm_cpu.$flatten\rf.$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:183$26_EN as FSM state register:
    Users of register don't seem to benefit from recoding.

7.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).

7.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).

7.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..

7.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).

7.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

7.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

7.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

7.9. Executing OPT pass (performing simple optimizations).

7.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.

7.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
Removed a total of 0 cells.

7.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sm_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

7.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sm_cpu.
Performed a total of 0 changes.

7.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
Removed a total of 0 cells.

7.9.6. Executing OPT_DFF pass (perform DFF optimizations).

7.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..

7.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.

7.9.9. Finished OPT passes. (There is nothing left to do.)

7.10. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell sm_cpu.$add$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:33$5 ($add).
Removed top 31 bits (of 32) from FF cell sm_cpu.$flatten\rf.$procdff$102 ($dff).
Removed cell sm_cpu.$flatten\rf.$procmux$98 ($mux).
Removed cell sm_cpu.$flatten\rf.$procmux$96 ($mux).
Removed top 2 bits (of 3) from port B of cell sm_cpu.$flatten\alu.$procmux$47_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell sm_cpu.$flatten\alu.$procmux$46_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell sm_cpu.$flatten\alu.$procmux$45_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell sm_cpu.$flatten\alu.$ternary$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:155$23 ($mux).
Removed top 6 bits (of 12) from port B of cell sm_cpu.$flatten\sm_control.$procmux$68_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell sm_cpu.$flatten\sm_control.$procmux$63_CMP0 ($eq).
Removed top 6 bits (of 12) from port B of cell sm_cpu.$flatten\sm_control.$procmux$57_CMP0 ($eq).
Removed top 10 bits (of 12) from port B of cell sm_cpu.$flatten\sm_control.$procmux$56_CMP0 ($eq).
Removed top 6 bits (of 12) from port B of cell sm_cpu.$flatten\sm_control.$procmux$55_CMP0 ($eq).
Removed top 6 bits (of 12) from port B of cell sm_cpu.$flatten\sm_control.$procmux$54_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell sm_cpu.$flatten\sm_control.$procmux$53_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell sm_cpu.$flatten\sm_control.$procmux$52_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell sm_cpu.$flatten\sm_control.$procmux$51_CMP0 ($eq).
Removed top 31 bits (of 32) from wire sm_cpu.$flatten\alu.$ternary$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:155$23_Y.

7.11. Executing PEEPOPT pass (run peephole optimizers).

7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

7.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module sm_cpu:
  creating $macc model for $add$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:33$5 ($add).
  creating $macc model for $add$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:67$11 ($add).
  creating $macc model for $flatten\alu.$add$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:150$17 ($add).
  creating $macc model for $flatten\alu.$sub$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:156$24 ($sub).
  creating $alu model for $macc $flatten\alu.$sub$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:156$24.
  creating $alu model for $macc $flatten\alu.$add$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:150$17.
  creating $alu model for $macc $add$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:67$11.
  creating $alu model for $macc $add$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:33$5.
  creating $alu model for $flatten\alu.$lt$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:155$22 ($lt): new $alu
  creating $alu cell for $add$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:33$5: $auto$alumacc.cc:485:replace_alu$116
  creating $alu cell for $add$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:67$11: $auto$alumacc.cc:485:replace_alu$119
  creating $alu cell for $flatten\alu.$lt$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:155$22: $auto$alumacc.cc:485:replace_alu$122
  creating $alu cell for $flatten\alu.$add$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:150$17: $auto$alumacc.cc:485:replace_alu$133
  creating $alu cell for $flatten\alu.$sub$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:156$24: $auto$alumacc.cc:485:replace_alu$136
  created 5 $alu and 0 $macc cells.

7.14. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module sm_cpu that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$34 ($memrd):
    Found 6 activation_patterns using ctrl signal { $flatten\alu.$procmux$47_CMP $flatten\alu.$procmux$46_CMP $flatten\alu.$procmux$45_CMP $flatten\alu.$procmux$44_CMP $flatten\alu.$procmux$43_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$33_Y \aluSrc }.
    Found 2 candidates: $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$31 $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$28
    Analyzing resource sharing with $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$31 ($memrd):
      Found 4 activation_patterns using ctrl signal { $flatten\alu.$procmux$47_CMP $flatten\alu.$procmux$46_CMP $flatten\alu.$procmux$45_CMP $flatten\alu.$procmux$44_CMP $flatten\alu.$procmux$43_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$30_Y }.
      Forbidden control signals for this pair of cells: { \sm_control.pcSrc $flatten\alu.$lt$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:155$22_Y }
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$34: { $flatten\alu.$procmux$46_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$33_Y \aluSrc } = 3'110
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$34: { $flatten\alu.$procmux$44_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$33_Y \aluSrc } = 3'110
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$34: { $flatten\alu.$procmux$47_CMP $flatten\alu.$procmux$46_CMP $flatten\alu.$procmux$45_CMP $flatten\alu.$procmux$44_CMP $flatten\alu.$procmux$43_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$33_Y \aluSrc } = 7'0000010
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$34: { $flatten\alu.$procmux$47_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$33_Y \aluSrc } = 3'110
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$34: { $flatten\alu.$procmux$45_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$33_Y \aluSrc } = 3'110
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$34: { $flatten\alu.$procmux$43_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$33_Y \aluSrc } = 3'110
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$31: { $flatten\alu.$procmux$43_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$30_Y } = 2'11
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$31: { $flatten\alu.$procmux$47_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$30_Y } = 2'11
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$31: { $flatten\alu.$procmux$47_CMP $flatten\alu.$procmux$46_CMP $flatten\alu.$procmux$45_CMP $flatten\alu.$procmux$44_CMP $flatten\alu.$procmux$43_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$30_Y } = 6'000001
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$31: { $flatten\alu.$procmux$44_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$30_Y } = 2'11
      Adding exclusive control bits: $flatten\alu.$procmux$43_CMP vs. $flatten\alu.$procmux$44_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$43_CMP vs. $flatten\alu.$procmux$45_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$43_CMP vs. $flatten\alu.$procmux$46_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$43_CMP vs. $flatten\alu.$procmux$47_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$44_CMP vs. $flatten\alu.$procmux$45_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$44_CMP vs. $flatten\alu.$procmux$46_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$44_CMP vs. $flatten\alu.$procmux$47_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$45_CMP vs. $flatten\alu.$procmux$46_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$45_CMP vs. $flatten\alu.$procmux$47_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$46_CMP vs. $flatten\alu.$procmux$47_CMP
      Adding exclusive control bits: $auto$opt_reduce.cc:134:opt_mux$105 vs. $flatten\sm_control.$procmux$53_CMP
      Adding exclusive control bits: $auto$opt_reduce.cc:134:opt_mux$105 vs. $flatten\sm_control.$procmux$55_CMP
      Adding exclusive control bits: $auto$opt_reduce.cc:134:opt_mux$105 vs. $flatten\sm_control.$procmux$56_CMP
      Adding exclusive control bits: $auto$opt_reduce.cc:134:opt_mux$105 vs. $flatten\sm_control.$procmux$57_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$55_CMP vs. $flatten\sm_control.$procmux$53_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$56_CMP vs. $flatten\sm_control.$procmux$53_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$56_CMP vs. $flatten\sm_control.$procmux$55_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$57_CMP vs. $flatten\sm_control.$procmux$53_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$57_CMP vs. $flatten\sm_control.$procmux$55_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$57_CMP vs. $flatten\sm_control.$procmux$56_CMP
      Size of SAT problem: 19 cells, 295 variables, 897 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\alu.$procmux$47_CMP $flatten\alu.$procmux$46_CMP $flatten\alu.$procmux$45_CMP $flatten\alu.$procmux$44_CMP $flatten\alu.$procmux$43_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$30_Y $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$33_Y \aluSrc } = 8'00000110
    Analyzing resource sharing with $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$28 ($memrd):
      Found 1 activation_patterns using ctrl signal $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$27_Y.
      Forbidden control signals for this pair of cells: { \sm_control.pcSrc $flatten\alu.$lt$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:155$22_Y }
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$34: { $flatten\alu.$procmux$46_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$33_Y \aluSrc } = 3'110
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$34: { $flatten\alu.$procmux$44_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$33_Y \aluSrc } = 3'110
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$34: { $flatten\alu.$procmux$47_CMP $flatten\alu.$procmux$46_CMP $flatten\alu.$procmux$45_CMP $flatten\alu.$procmux$44_CMP $flatten\alu.$procmux$43_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$33_Y \aluSrc } = 7'0000010
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$34: { $flatten\alu.$procmux$47_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$33_Y \aluSrc } = 3'110
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$34: { $flatten\alu.$procmux$45_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$33_Y \aluSrc } = 3'110
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$34: { $flatten\alu.$procmux$43_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$33_Y \aluSrc } = 3'110
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$28: $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$27_Y = 1'1
      Adding exclusive control bits: $flatten\alu.$procmux$43_CMP vs. $flatten\alu.$procmux$44_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$43_CMP vs. $flatten\alu.$procmux$45_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$43_CMP vs. $flatten\alu.$procmux$46_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$43_CMP vs. $flatten\alu.$procmux$47_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$44_CMP vs. $flatten\alu.$procmux$45_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$44_CMP vs. $flatten\alu.$procmux$46_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$44_CMP vs. $flatten\alu.$procmux$47_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$45_CMP vs. $flatten\alu.$procmux$46_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$45_CMP vs. $flatten\alu.$procmux$47_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$46_CMP vs. $flatten\alu.$procmux$47_CMP
      Adding exclusive control bits: $auto$opt_reduce.cc:134:opt_mux$105 vs. $flatten\sm_control.$procmux$53_CMP
      Adding exclusive control bits: $auto$opt_reduce.cc:134:opt_mux$105 vs. $flatten\sm_control.$procmux$55_CMP
      Adding exclusive control bits: $auto$opt_reduce.cc:134:opt_mux$105 vs. $flatten\sm_control.$procmux$56_CMP
      Adding exclusive control bits: $auto$opt_reduce.cc:134:opt_mux$105 vs. $flatten\sm_control.$procmux$57_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$55_CMP vs. $flatten\sm_control.$procmux$53_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$56_CMP vs. $flatten\sm_control.$procmux$53_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$56_CMP vs. $flatten\sm_control.$procmux$55_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$57_CMP vs. $flatten\sm_control.$procmux$53_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$57_CMP vs. $flatten\sm_control.$procmux$55_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$57_CMP vs. $flatten\sm_control.$procmux$56_CMP
      Size of SAT problem: 19 cells, 282 variables, 852 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\alu.$procmux$47_CMP $flatten\alu.$procmux$46_CMP $flatten\alu.$procmux$45_CMP $flatten\alu.$procmux$44_CMP $flatten\alu.$procmux$43_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$27_Y $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$33_Y \aluSrc } = 8'00000110
  Analyzing resource sharing options for $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$31 ($memrd):
    Found 4 activation_patterns using ctrl signal { $flatten\alu.$procmux$47_CMP $flatten\alu.$procmux$46_CMP $flatten\alu.$procmux$45_CMP $flatten\alu.$procmux$44_CMP $flatten\alu.$procmux$43_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$30_Y }.
    Found 1 candidates: $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$28
    Analyzing resource sharing with $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$28 ($memrd):
      Found 1 activation_patterns using ctrl signal $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$27_Y.
      Forbidden control signals for this pair of cells: { \sm_control.pcSrc $flatten\alu.$lt$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:155$22_Y }
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$31: { $flatten\alu.$procmux$43_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$30_Y } = 2'11
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$31: { $flatten\alu.$procmux$47_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$30_Y } = 2'11
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$31: { $flatten\alu.$procmux$47_CMP $flatten\alu.$procmux$46_CMP $flatten\alu.$procmux$45_CMP $flatten\alu.$procmux$44_CMP $flatten\alu.$procmux$43_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$30_Y } = 6'000001
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$31: { $flatten\alu.$procmux$44_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$30_Y } = 2'11
      Activation pattern for cell $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$28: $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$27_Y = 1'1
      Adding exclusive control bits: $flatten\alu.$procmux$43_CMP vs. $flatten\alu.$procmux$44_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$43_CMP vs. $flatten\alu.$procmux$45_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$43_CMP vs. $flatten\alu.$procmux$46_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$43_CMP vs. $flatten\alu.$procmux$47_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$44_CMP vs. $flatten\alu.$procmux$45_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$44_CMP vs. $flatten\alu.$procmux$46_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$44_CMP vs. $flatten\alu.$procmux$47_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$45_CMP vs. $flatten\alu.$procmux$46_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$45_CMP vs. $flatten\alu.$procmux$47_CMP
      Adding exclusive control bits: $flatten\alu.$procmux$46_CMP vs. $flatten\alu.$procmux$47_CMP
      Adding exclusive control bits: $auto$opt_reduce.cc:134:opt_mux$105 vs. $flatten\sm_control.$procmux$53_CMP
      Adding exclusive control bits: $auto$opt_reduce.cc:134:opt_mux$105 vs. $flatten\sm_control.$procmux$55_CMP
      Adding exclusive control bits: $auto$opt_reduce.cc:134:opt_mux$105 vs. $flatten\sm_control.$procmux$56_CMP
      Adding exclusive control bits: $auto$opt_reduce.cc:134:opt_mux$105 vs. $flatten\sm_control.$procmux$57_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$55_CMP vs. $flatten\sm_control.$procmux$53_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$56_CMP vs. $flatten\sm_control.$procmux$53_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$56_CMP vs. $flatten\sm_control.$procmux$55_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$57_CMP vs. $flatten\sm_control.$procmux$53_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$57_CMP vs. $flatten\sm_control.$procmux$55_CMP
      Adding exclusive control bits: $flatten\sm_control.$procmux$57_CMP vs. $flatten\sm_control.$procmux$56_CMP
      Size of SAT problem: 16 cells, 253 variables, 751 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\alu.$procmux$47_CMP $flatten\alu.$procmux$46_CMP $flatten\alu.$procmux$45_CMP $flatten\alu.$procmux$44_CMP $flatten\alu.$procmux$43_CMP $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$27_Y $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$30_Y } = 7'0000011
  Analyzing resource sharing options for $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$28 ($memrd):
    Found 1 activation_patterns using ctrl signal $flatten\rf.$ne$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$27_Y.
    No candidates found.
  Analyzing resource sharing options for $flatten\alu.$shr$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:154$21 ($shr):
    Found 1 activation_patterns using ctrl signal $flatten\alu.$procmux$45_CMP.
    No candidates found.

7.15. Executing OPT pass (performing simple optimizations).

7.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.
<suppressed ~1 debug messages>

7.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
Removed a total of 0 cells.

7.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sm_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

7.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sm_cpu.
Performed a total of 0 changes.

7.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
Removed a total of 0 cells.

7.15.6. Executing OPT_DFF pass (perform DFF optimizations).

7.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

7.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.

7.15.9. Rerunning OPT passes. (Maybe there is more to do..)

7.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sm_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

7.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sm_cpu.
Performed a total of 0 changes.

7.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
Removed a total of 0 cells.

7.15.13. Executing OPT_DFF pass (perform DFF optimizations).

7.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..

7.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.

7.15.16. Finished OPT passes. (There is nothing left to do.)

7.16. Executing MEMORY pass.

7.16.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

7.16.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$flatten\rf.$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:0$40' in module `\sm_cpu': merged $dff to cell.
Checking cell `$flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$28' in module `\sm_cpu': no (compatible) $dff found.
Checking cell `$flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$31' in module `\sm_cpu': no (compatible) $dff found.
Checking cell `$flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$34' in module `\sm_cpu': no (compatible) $dff found.

7.16.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

7.16.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

7.16.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..

7.16.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\rf.rf' in module `\sm_cpu':
  $flatten\rf.$memwr$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:0$40 ($memwr)
  $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:180$34 ($memrd)
  $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:179$31 ($memrd)
  $flatten\rf.$memrd$\rf$/openLANE_flow/designs/sm_cpu/src/sm_cpu.v:178$28 ($memrd)

7.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..

7.18. Executing OPT pass (performing simple optimizations).

7.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.
<suppressed ~7 debug messages>

7.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
Removed a total of 0 cells.

7.18.3. Executing OPT_DFF pass (perform DFF optimizations).

7.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

7.18.5. Finished fast OPT passes.

7.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \rf.rf in module \sm_cpu:
  created 32 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 93 $mux cells.
  write interface: 32 write mux blocks.

7.20. Executing OPT pass (performing simple optimizations).

7.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.
<suppressed ~10 debug messages>

7.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
Removed a total of 0 cells.

7.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sm_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

7.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sm_cpu.
Performed a total of 0 changes.

7.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
Removed a total of 0 cells.

7.20.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $pmux $flatten\alu.$procmux$42 in front of them:
        $auto$alumacc.cc:485:replace_alu$136
        $auto$alumacc.cc:485:replace_alu$133

7.20.7. Executing OPT_DFF pass (perform DFF optimizations).

7.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..
Removed 0 unused cells and 139 unused wires.
<suppressed ~1 debug messages>

7.20.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.

7.20.10. Rerunning OPT passes. (Maybe there is more to do..)

7.20.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sm_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

7.20.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sm_cpu.
    New ctrl vector for $pmux cell $flatten\alu.$procmux$42: { $flatten\alu.$procmux$47_CMP $flatten\alu.$procmux$46_CMP $flatten\alu.$procmux$45_CMP $flatten\alu.$procmux$44_CMP }
  Optimizing cells in module \sm_cpu.
Performed a total of 1 changes.

7.20.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
Removed a total of 0 cells.

7.20.14. Executing OPT_SHARE pass.

7.20.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\rf.rf[9]$160 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[9]).
Adding EN signal on $memory\rf.rf[8]$158 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[8]).
Adding EN signal on $memory\rf.rf[7]$156 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[7]).
Adding EN signal on $memory\rf.rf[6]$154 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[6]).
Adding EN signal on $memory\rf.rf[5]$152 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[5]).
Adding EN signal on $memory\rf.rf[4]$150 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[4]).
Adding EN signal on $memory\rf.rf[3]$148 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[3]).
Adding EN signal on $memory\rf.rf[31]$204 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[31]).
Adding EN signal on $memory\rf.rf[30]$202 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[30]).
Adding EN signal on $memory\rf.rf[2]$146 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[2]).
Adding EN signal on $memory\rf.rf[29]$200 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[29]).
Adding EN signal on $memory\rf.rf[28]$198 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[28]).
Adding EN signal on $memory\rf.rf[27]$196 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[27]).
Adding EN signal on $memory\rf.rf[26]$194 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[26]).
Adding EN signal on $memory\rf.rf[25]$192 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[25]).
Adding EN signal on $memory\rf.rf[24]$190 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[24]).
Adding EN signal on $memory\rf.rf[23]$188 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[23]).
Adding EN signal on $memory\rf.rf[22]$186 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[22]).
Adding EN signal on $memory\rf.rf[21]$184 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[21]).
Adding EN signal on $memory\rf.rf[20]$182 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[20]).
Adding EN signal on $memory\rf.rf[1]$144 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[1]).
Adding EN signal on $memory\rf.rf[19]$180 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[19]).
Adding EN signal on $memory\rf.rf[18]$178 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[18]).
Adding EN signal on $memory\rf.rf[17]$176 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[17]).
Adding EN signal on $memory\rf.rf[16]$174 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[16]).
Adding EN signal on $memory\rf.rf[15]$172 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[15]).
Adding EN signal on $memory\rf.rf[14]$170 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[14]).
Adding EN signal on $memory\rf.rf[13]$168 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[13]).
Adding EN signal on $memory\rf.rf[12]$166 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[12]).
Adding EN signal on $memory\rf.rf[11]$164 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[11]).
Adding EN signal on $memory\rf.rf[10]$162 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[10]).
Adding EN signal on $memory\rf.rf[0]$142 ($dff) from module sm_cpu (D = \alu.result, Q = \rf.rf[0]).

7.20.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..
Removed 32 unused cells and 32 unused wires.
<suppressed ~33 debug messages>

7.20.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.

7.20.18. Rerunning OPT passes. (Maybe there is more to do..)

7.20.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sm_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

7.20.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sm_cpu.
Performed a total of 0 changes.

7.20.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
Removed a total of 0 cells.

7.20.22. Executing OPT_SHARE pass.

7.20.23. Executing OPT_DFF pass (perform DFF optimizations).

7.20.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..

7.20.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.

7.20.26. Finished OPT passes. (There is nothing left to do.)

7.21. Executing TECHMAP pass (map to technology primitives).

7.21.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=4 for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=5 for cells of type $pmux.
Using extmapper simplemap for cells of type $and.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
No more expansions possible.
<suppressed ~1784 debug messages>

7.22. Executing OPT pass (performing simple optimizations).

7.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.
<suppressed ~722 debug messages>

7.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
<suppressed ~303 debug messages>
Removed a total of 101 cells.

7.22.3. Executing OPT_DFF pass (perform DFF optimizations).

7.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..
Removed 167 unused cells and 605 unused wires.
<suppressed ~168 debug messages>

7.22.5. Finished fast OPT passes.

7.23. Executing ABC pass (technology mapping using ABC).

7.23.1. Extracting gate netlist of module `\sm_cpu' to `<abc-temp-dir>/input.blif'..
Extracted 4626 gates and 5720 wires to a netlist network with 1093 inputs and 128 outputs.

7.23.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       39
ABC RESULTS:            ANDNOT cells:      419
ABC RESULTS:               MUX cells:     3270
ABC RESULTS:              NAND cells:       89
ABC RESULTS:               NOR cells:      108
ABC RESULTS:               NOT cells:       72
ABC RESULTS:                OR cells:      327
ABC RESULTS:             ORNOT cells:       20
ABC RESULTS:              XNOR cells:      114
ABC RESULTS:               XOR cells:      106
ABC RESULTS:        internal signals:     4499
ABC RESULTS:           input signals:     1093
ABC RESULTS:          output signals:      128
Removing temp directory.

7.24. Executing OPT pass (performing simple optimizations).

7.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.
<suppressed ~1539 debug messages>

7.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
Removed a total of 0 cells.

7.24.3. Executing OPT_DFF pass (perform DFF optimizations).

7.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..
Removed 6 unused cells and 1814 unused wires.
<suppressed ~22 debug messages>

7.24.5. Finished fast OPT passes.

7.25. Executing HIERARCHY pass (managing design hierarchy).

7.25.1. Analyzing design hierarchy..
Top module:  \sm_cpu

7.25.2. Analyzing design hierarchy..
Top module:  \sm_cpu
Removed 0 unused modules.

7.26. Printing statistics.

=== sm_cpu ===

   Number of wires:               4533
   Number of wire bits:           6059
   Number of public wires:          71
   Number of public wire bits:    1597
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5614
     $_ANDNOT_                     419
     $_AND_                         39
     $_DFFE_PP_                   1024
     $_DFF_PN0_                     32
     $_MUX_                       3270
     $_NAND_                        89
     $_NOR_                        108
     $_NOT_                         66
     $_ORNOT_                       20
     $_OR_                         327
     $_XNOR_                       114
     $_XOR_                        106

7.27. Executing CHECK pass (checking for obvious problems).
checking module sm_cpu..
found and reported 0 problems.

8. Executing SHARE pass (SAT-based resource sharing).

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
Removed a total of 0 cells.

9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sm_cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sm_cpu.
Performed a total of 0 changes.

9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sm_cpu'.
Removed a total of 0 cells.

9.6. Executing OPT_DFF pass (perform DFF optimizations).

9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..

9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sm_cpu.

9.9. Finished OPT passes. (There is nothing left to do.)

10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..
Removed 0 unused cells and 31 unused wires.
<suppressed ~31 debug messages>

11. Printing statistics.

=== sm_cpu ===

   Number of wires:               4502
   Number of wire bits:           5653
   Number of public wires:          40
   Number of public wire bits:    1191
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5614
     $_ANDNOT_                     419
     $_AND_                         39
     $_DFFE_PP_                   1024
     $_DFF_PN0_                     32
     $_MUX_                       3270
     $_NAND_                        89
     $_NOR_                        108
     $_NOT_                         66
     $_ORNOT_                       20
     $_OR_                         327
     $_XNOR_                       114
     $_XOR_                        106

mapping tbuf

12. Executing TECHMAP pass (map to technology primitives).

12.1. Executing Verilog-2005 frontend: /home/egor/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/egor/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

12.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

13. Executing SIMPLEMAP pass (map simple cells to gate primitives).

14. Executing MUXCOVER pass (mapping to wider MUXes).
Covering MUX trees in module sm_cpu..
  Treeifying 3270 MUXes:
    Found tree with 32 MUXes at root \regData [0].
    Found tree with 32 MUXes at root \regData [1].
    Found tree with 32 MUXes at root \regData [2].
    Found tree with 32 MUXes at root \regData [3].
    Found tree with 32 MUXes at root \regData [4].
    Found tree with 32 MUXes at root \regData [5].
    Found tree with 32 MUXes at root \regData [6].
    Found tree with 32 MUXes at root \regData [7].
    Found tree with 32 MUXes at root \regData [8].
    Found tree with 32 MUXes at root \regData [9].
    Found tree with 32 MUXes at root \regData [10].
    Found tree with 32 MUXes at root \regData [11].
    Found tree with 32 MUXes at root \regData [12].
    Found tree with 32 MUXes at root \regData [13].
    Found tree with 32 MUXes at root \regData [14].
    Found tree with 32 MUXes at root \regData [15].
    Found tree with 32 MUXes at root \regData [16].
    Found tree with 32 MUXes at root \regData [17].
    Found tree with 32 MUXes at root \regData [18].
    Found tree with 32 MUXes at root \regData [19].
    Found tree with 32 MUXes at root \regData [20].
    Found tree with 32 MUXes at root \regData [21].
    Found tree with 32 MUXes at root \regData [22].
    Found tree with 32 MUXes at root \regData [23].
    Found tree with 32 MUXes at root \regData [24].
    Found tree with 32 MUXes at root \regData [25].
    Found tree with 32 MUXes at root \regData [26].
    Found tree with 32 MUXes at root \regData [27].
    Found tree with 32 MUXes at root \regData [28].
    Found tree with 32 MUXes at root \regData [29].
    Found tree with 32 MUXes at root \regData [30].
    Found tree with 32 MUXes at root \regData [31].
    Found tree with 1 MUXes at root \r_pc.d [0].
    Found tree with 1 MUXes at root \r_pc.d [1].
    Found tree with 1 MUXes at root \r_pc.d [2].
    Found tree with 1 MUXes at root \r_pc.d [3].
    Found tree with 1 MUXes at root \r_pc.d [4].
    Found tree with 1 MUXes at root \r_pc.d [5].
    Found tree with 1 MUXes at root \r_pc.d [6].
    Found tree with 1 MUXes at root \r_pc.d [7].
    Found tree with 1 MUXes at root \r_pc.d [8].
    Found tree with 1 MUXes at root \r_pc.d [9].
    Found tree with 1 MUXes at root \r_pc.d [10].
    Found tree with 1 MUXes at root \r_pc.d [11].
    Found tree with 1 MUXes at root \r_pc.d [12].
    Found tree with 1 MUXes at root \r_pc.d [13].
    Found tree with 1 MUXes at root \r_pc.d [14].
    Found tree with 1 MUXes at root \r_pc.d [15].
    Found tree with 1 MUXes at root \r_pc.d [16].
    Found tree with 1 MUXes at root \r_pc.d [17].
    Found tree with 1 MUXes at root \r_pc.d [18].
    Found tree with 1 MUXes at root \r_pc.d [19].
    Found tree with 1 MUXes at root \r_pc.d [20].
    Found tree with 1 MUXes at root \r_pc.d [21].
    Found tree with 1 MUXes at root \r_pc.d [22].
    Found tree with 1 MUXes at root \r_pc.d [23].
    Found tree with 1 MUXes at root \r_pc.d [24].
    Found tree with 1 MUXes at root \r_pc.d [25].
    Found tree with 1 MUXes at root \r_pc.d [26].
    Found tree with 1 MUXes at root \r_pc.d [27].
    Found tree with 1 MUXes at root \r_pc.d [28].
    Found tree with 1 MUXes at root \r_pc.d [29].
    Found tree with 1 MUXes at root \r_pc.d [30].
    Found tree with 1 MUXes at root \r_pc.d [31].
    Found tree with 1 MUXes at root \alu.result [0].
    Found tree with 1 MUXes at root \alu.result [1].
    Found tree with 1 MUXes at root \alu.result [2].
    Found tree with 1 MUXes at root \alu.result [3].
    Found tree with 1 MUXes at root \alu.result [4].
    Found tree with 1 MUXes at root \alu.result [5].
    Found tree with 1 MUXes at root \alu.result [6].
    Found tree with 1 MUXes at root \alu.result [7].
    Found tree with 1 MUXes at root \alu.result [8].
    Found tree with 1 MUXes at root \alu.result [9].
    Found tree with 1 MUXes at root \alu.result [10].
    Found tree with 1 MUXes at root \alu.result [11].
    Found tree with 1 MUXes at root \alu.result [12].
    Found tree with 1 MUXes at root \alu.result [13].
    Found tree with 1 MUXes at root \alu.result [14].
    Found tree with 1 MUXes at root \alu.result [15].
    Found tree with 1 MUXes at root \alu.result [16].
    Found tree with 1 MUXes at root \alu.result [17].
    Found tree with 1 MUXes at root \alu.result [18].
    Found tree with 1 MUXes at root \alu.result [19].
    Found tree with 1 MUXes at root \alu.result [20].
    Found tree with 1 MUXes at root \alu.result [21].
    Found tree with 1 MUXes at root \alu.result [22].
    Found tree with 1 MUXes at root \alu.result [23].
    Found tree with 1 MUXes at root \alu.result [24].
    Found tree with 1 MUXes at root \alu.result [25].
    Found tree with 1 MUXes at root \alu.result [26].
    Found tree with 1 MUXes at root \alu.result [27].
    Found tree with 1 MUXes at root \alu.result [28].
    Found tree with 1 MUXes at root \alu.result [29].
    Found tree with 1 MUXes at root \alu.result [30].
    Found tree with 1 MUXes at root \alu.result [31].
    Found tree with 1 MUXes at root $abc$8416$new_n5699_.
    Found tree with 1 MUXes at root $abc$8416$new_n5698_.
    Found tree with 1 MUXes at root $abc$8416$new_n5696_.
    Found tree with 1 MUXes at root $abc$8416$new_n5694_.
    Found tree with 1 MUXes at root $abc$8416$new_n5693_.
    Found tree with 1 MUXes at root $abc$8416$new_n4230_.
    Found tree with 1 MUXes at root $abc$8416$new_n4211_.
    Found tree with 1 MUXes at root $abc$8416$new_n4194_.
    Found tree with 1 MUXes at root $abc$8416$new_n4172_.
    Found tree with 1 MUXes at root $abc$8416$new_n4154_.
    Found tree with 1 MUXes at root $abc$8416$new_n4135_.
    Found tree with 1 MUXes at root $abc$8416$new_n4118_.
    Found tree with 1 MUXes at root $abc$8416$new_n4093_.
    Found tree with 1 MUXes at root $abc$8416$new_n4074_.
    Found tree with 1 MUXes at root $abc$8416$new_n4055_.
    Found tree with 1 MUXes at root $abc$8416$new_n4038_.
    Found tree with 1 MUXes at root $abc$8416$new_n4016_.
    Found tree with 1 MUXes at root $abc$8416$new_n3998_.
    Found tree with 1 MUXes at root $abc$8416$new_n3979_.
    Found tree with 1 MUXes at root $abc$8416$new_n3962_.
    Found tree with 1 MUXes at root $abc$8416$new_n3937_.
    Found tree with 2 MUXes at root $abc$8416$new_n3926_.
    Found tree with 1 MUXes at root $abc$8416$new_n3918_.
    Found tree with 2 MUXes at root $abc$8416$new_n3910_.
    Found tree with 1 MUXes at root $abc$8416$new_n3899_.
    Found tree with 2 MUXes at root $abc$8416$new_n3890_.
    Found tree with 1 MUXes at root $abc$8416$new_n3882_.
    Found tree with 2 MUXes at root $abc$8416$new_n3874_.
    Found tree with 1 MUXes at root $abc$8416$new_n3860_.
    Found tree with 2 MUXes at root $abc$8416$new_n3850_.
    Found tree with 1 MUXes at root $abc$8416$new_n3842_.
    Found tree with 2 MUXes at root $abc$8416$new_n3834_.
    Found tree with 1 MUXes at root $abc$8416$new_n3823_.
    Found tree with 2 MUXes at root $abc$8416$new_n3814_.
    Found tree with 1 MUXes at root $abc$8416$new_n3806_.
    Found tree with 2 MUXes at root $abc$8416$new_n3798_.
    Found tree with 1 MUXes at root $abc$8416$new_n3784_.
    Found tree with 3 MUXes at root $abc$8416$new_n3774_.
    Found tree with 1 MUXes at root $abc$8416$new_n3773_.
    Found tree with 1 MUXes at root $abc$8416$new_n3771_.
    Found tree with 1 MUXes at root $abc$8416$new_n3769_.
    Found tree with 1 MUXes at root $abc$8416$new_n3762_.
    Found tree with 3 MUXes at root $abc$8416$new_n3754_.
    Found tree with 1 MUXes at root $abc$8416$new_n3753_.
    Found tree with 1 MUXes at root $abc$8416$new_n3751_.
    Found tree with 1 MUXes at root $abc$8416$new_n3749_.
    Found tree with 1 MUXes at root $abc$8416$new_n3739_.
    Found tree with 3 MUXes at root $abc$8416$new_n3730_.
    Found tree with 1 MUXes at root $abc$8416$new_n3729_.
    Found tree with 1 MUXes at root $abc$8416$new_n3727_.
    Found tree with 1 MUXes at root $abc$8416$new_n3725_.
    Found tree with 1 MUXes at root $abc$8416$new_n3718_.
    Found tree with 3 MUXes at root $abc$8416$new_n3710_.
    Found tree with 1 MUXes at root $abc$8416$new_n3709_.
    Found tree with 1 MUXes at root $abc$8416$new_n3707_.
    Found tree with 1 MUXes at root $abc$8416$new_n3705_.
    Found tree with 1 MUXes at root $abc$8416$new_n3695_.
    Found tree with 4 MUXes at root $abc$8416$new_n3686_.
    Found tree with 1 MUXes at root $abc$8416$new_n3685_.
    Found tree with 1 MUXes at root $abc$8416$new_n3684_.
    Found tree with 1 MUXes at root $abc$8416$new_n3682_.
    Found tree with 1 MUXes at root $abc$8416$new_n3681_.
    Found tree with 1 MUXes at root $abc$8416$new_n3680_.
    Found tree with 1 MUXes at root $abc$8416$new_n3679_.
    Found tree with 1 MUXes at root $abc$8416$new_n3677_.
    Found tree with 1 MUXes at root $abc$8416$new_n3676_.
    Found tree with 1 MUXes at root $abc$8416$new_n3675_.
    Found tree with 1 MUXes at root $abc$8416$new_n3673_.
    Found tree with 1 MUXes at root $abc$8416$new_n3666_.
    Found tree with 4 MUXes at root $abc$8416$new_n3658_.
    Found tree with 1 MUXes at root $abc$8416$new_n3657_.
    Found tree with 1 MUXes at root $abc$8416$new_n3656_.
    Found tree with 1 MUXes at root $abc$8416$new_n3654_.
    Found tree with 1 MUXes at root $abc$8416$new_n3653_.
    Found tree with 1 MUXes at root $abc$8416$new_n3652_.
    Found tree with 1 MUXes at root $abc$8416$new_n3651_.
    Found tree with 1 MUXes at root $abc$8416$new_n3649_.
    Found tree with 1 MUXes at root $abc$8416$new_n3648_.
    Found tree with 1 MUXes at root $abc$8416$new_n3647_.
    Found tree with 1 MUXes at root $abc$8416$new_n3645_.
    Found tree with 1 MUXes at root $abc$8416$new_n3638_.
    Found tree with 5 MUXes at root $abc$8416$new_n3630_.
    Found tree with 1 MUXes at root $abc$8416$new_n3629_.
    Found tree with 1 MUXes at root $abc$8416$new_n3628_.
    Found tree with 1 MUXes at root $abc$8416$new_n3627_.
    Found tree with 1 MUXes at root $abc$8416$new_n3625_.
    Found tree with 1 MUXes at root $abc$8416$new_n3624_.
    Found tree with 1 MUXes at root $abc$8416$new_n3623_.
    Found tree with 1 MUXes at root $abc$8416$new_n3622_.
    Found tree with 1 MUXes at root $abc$8416$new_n3621_.
    Found tree with 1 MUXes at root $abc$8416$new_n3620_.
    Found tree with 1 MUXes at root $abc$8416$new_n3619_.
    Found tree with 1 MUXes at root $abc$8416$new_n3618_.
    Found tree with 1 MUXes at root $abc$8416$new_n3617_.
    Found tree with 1 MUXes at root $abc$8416$new_n3616_.
    Found tree with 1 MUXes at root $abc$8416$new_n3615_.
    Found tree with 1 MUXes at root $abc$8416$new_n3613_.
    Found tree with 1 MUXes at root $abc$8416$new_n3612_.
    Found tree with 1 MUXes at root $abc$8416$new_n3611_.
    Found tree with 1 MUXes at root $abc$8416$new_n3610_.
    Found tree with 1 MUXes at root $abc$8416$new_n3609_.
    Found tree with 1 MUXes at root $abc$8416$new_n3608_.
    Found tree with 1 MUXes at root $abc$8416$new_n3607_.
    Found tree with 1 MUXes at root $abc$8416$new_n3605_.
    Found tree with 1 MUXes at root $abc$8416$new_n3604_.
    Found tree with 1 MUXes at root $abc$8416$new_n3603_.
    Found tree with 1 MUXes at root $abc$8416$new_n3601_.
    Found tree with 1 MUXes at root $abc$8416$new_n3596_.
    Found tree with 5 MUXes at root $abc$8416$new_n3587_.
    Found tree with 1 MUXes at root $abc$8416$new_n3586_.
    Found tree with 1 MUXes at root $abc$8416$new_n3585_.
    Found tree with 1 MUXes at root $abc$8416$new_n3584_.
    Found tree with 1 MUXes at root $abc$8416$new_n3583_.
    Found tree with 1 MUXes at root $abc$8416$new_n3582_.
    Found tree with 1 MUXes at root $abc$8416$new_n3581_.
    Found tree with 1 MUXes at root $abc$8416$new_n3580_.
    Found tree with 1 MUXes at root $abc$8416$new_n3579_.
    Found tree with 1 MUXes at root $abc$8416$new_n3578_.
    Found tree with 1 MUXes at root $abc$8416$new_n3577_.
    Found tree with 1 MUXes at root $abc$8416$new_n3576_.
    Found tree with 1 MUXes at root $abc$8416$new_n3575_.
    Found tree with 1 MUXes at root $abc$8416$new_n3574_.
    Found tree with 1 MUXes at root $abc$8416$new_n3573_.
    Found tree with 1 MUXes at root $abc$8416$new_n3572_.
    Found tree with 1 MUXes at root $abc$8416$new_n3570_.
    Found tree with 1 MUXes at root $abc$8416$new_n3569_.
    Found tree with 1 MUXes at root $abc$8416$new_n3568_.
    Found tree with 1 MUXes at root $abc$8416$new_n3567_.
    Found tree with 1 MUXes at root $abc$8416$new_n3566_.
    Found tree with 1 MUXes at root $abc$8416$new_n3565_.
    Found tree with 1 MUXes at root $abc$8416$new_n3564_.
    Found tree with 1 MUXes at root $abc$8416$new_n3562_.
    Found tree with 1 MUXes at root $abc$8416$new_n3561_.
    Found tree with 1 MUXes at root $abc$8416$new_n3560_.
    Found tree with 1 MUXes at root $abc$8416$new_n3558_.
    Found tree with 31 MUXes at root $abc$8416$new_n3534_.
    Found tree with 1 MUXes at root $abc$8416$new_n3503_.
    Found tree with 31 MUXes at root $abc$8416$new_n3501_.
    Found tree with 31 MUXes at root $abc$8416$new_n3463_.
    Found tree with 1 MUXes at root $abc$8416$new_n3432_.
    Found tree with 31 MUXes at root $abc$8416$new_n3430_.
    Found tree with 31 MUXes at root $abc$8416$new_n3395_.
    Found tree with 1 MUXes at root $abc$8416$new_n3364_.
    Found tree with 31 MUXes at root $abc$8416$new_n3362_.
    Found tree with 31 MUXes at root $abc$8416$new_n3321_.
    Found tree with 1 MUXes at root $abc$8416$new_n3290_.
    Found tree with 31 MUXes at root $abc$8416$new_n3288_.
    Found tree with 31 MUXes at root $abc$8416$new_n3253_.
    Found tree with 1 MUXes at root $abc$8416$new_n3222_.
    Found tree with 31 MUXes at root $abc$8416$new_n3220_.
    Found tree with 31 MUXes at root $abc$8416$new_n3182_.
    Found tree with 1 MUXes at root $abc$8416$new_n3151_.
    Found tree with 31 MUXes at root $abc$8416$new_n3149_.
    Found tree with 31 MUXes at root $abc$8416$new_n3114_.
    Found tree with 1 MUXes at root $abc$8416$new_n3083_.
    Found tree with 31 MUXes at root $abc$8416$new_n3081_.
    Found tree with 31 MUXes at root $abc$8416$new_n3037_.
    Found tree with 1 MUXes at root $abc$8416$new_n3006_.
    Found tree with 31 MUXes at root $abc$8416$new_n3004_.
    Found tree with 31 MUXes at root $abc$8416$new_n2969_.
    Found tree with 1 MUXes at root $abc$8416$new_n2938_.
    Found tree with 31 MUXes at root $abc$8416$new_n2936_.
    Found tree with 31 MUXes at root $abc$8416$new_n2898_.
    Found tree with 1 MUXes at root $abc$8416$new_n2867_.
    Found tree with 31 MUXes at root $abc$8416$new_n2865_.
    Found tree with 31 MUXes at root $abc$8416$new_n2830_.
    Found tree with 1 MUXes at root $abc$8416$new_n2799_.
    Found tree with 31 MUXes at root $abc$8416$new_n2797_.
    Found tree with 31 MUXes at root $abc$8416$new_n2756_.
    Found tree with 1 MUXes at root $abc$8416$new_n2725_.
    Found tree with 31 MUXes at root $abc$8416$new_n2723_.
    Found tree with 31 MUXes at root $abc$8416$new_n2688_.
    Found tree with 1 MUXes at root $abc$8416$new_n2657_.
    Found tree with 31 MUXes at root $abc$8416$new_n2655_.
    Found tree with 31 MUXes at root $abc$8416$new_n2617_.
    Found tree with 1 MUXes at root $abc$8416$new_n2586_.
    Found tree with 31 MUXes at root $abc$8416$new_n2584_.
    Found tree with 31 MUXes at root $abc$8416$new_n2549_.
    Found tree with 1 MUXes at root $abc$8416$new_n2518_.
    Found tree with 31 MUXes at root $abc$8416$new_n2516_.
    Found tree with 31 MUXes at root $abc$8416$new_n2470_.
    Found tree with 1 MUXes at root $abc$8416$new_n2439_.
    Found tree with 31 MUXes at root $abc$8416$new_n2437_.
    Found tree with 31 MUXes at root $abc$8416$new_n2403_.
    Found tree with 1 MUXes at root $abc$8416$new_n2372_.
    Found tree with 31 MUXes at root $abc$8416$new_n2370_.
    Found tree with 31 MUXes at root $abc$8416$new_n2333_.
    Found tree with 1 MUXes at root $abc$8416$new_n2302_.
    Found tree with 31 MUXes at root $abc$8416$new_n2300_.
    Found tree with 31 MUXes at root $abc$8416$new_n2266_.
    Found tree with 1 MUXes at root $abc$8416$new_n2235_.
    Found tree with 31 MUXes at root $abc$8416$new_n2233_.
    Found tree with 31 MUXes at root $abc$8416$new_n2193_.
    Found tree with 1 MUXes at root $abc$8416$new_n2162_.
    Found tree with 31 MUXes at root $abc$8416$new_n2160_.
    Found tree with 31 MUXes at root $abc$8416$new_n2126_.
    Found tree with 1 MUXes at root $abc$8416$new_n2095_.
    Found tree with 31 MUXes at root $abc$8416$new_n2093_.
    Found tree with 31 MUXes at root $abc$8416$new_n2056_.
    Found tree with 1 MUXes at root $abc$8416$new_n2025_.
    Found tree with 31 MUXes at root $abc$8416$new_n2023_.
    Found tree with 31 MUXes at root $abc$8416$new_n1989_.
    Found tree with 1 MUXes at root $abc$8416$new_n1958_.
    Found tree with 31 MUXes at root $abc$8416$new_n1956_.
    Found tree with 31 MUXes at root $abc$8416$new_n1913_.
    Found tree with 1 MUXes at root $abc$8416$new_n1882_.
    Found tree with 31 MUXes at root $abc$8416$new_n1880_.
    Found tree with 31 MUXes at root $abc$8416$new_n1846_.
    Found tree with 1 MUXes at root $abc$8416$new_n1815_.
    Found tree with 31 MUXes at root $abc$8416$new_n1813_.
    Found tree with 31 MUXes at root $abc$8416$new_n1776_.
    Found tree with 1 MUXes at root $abc$8416$new_n1745_.
    Found tree with 31 MUXes at root $abc$8416$new_n1743_.
    Found tree with 31 MUXes at root $abc$8416$new_n1709_.
    Found tree with 1 MUXes at root $abc$8416$new_n1678_.
    Found tree with 31 MUXes at root $abc$8416$new_n1676_.
    Found tree with 31 MUXes at root $abc$8416$new_n1636_.
    Found tree with 1 MUXes at root $abc$8416$new_n1605_.
    Found tree with 31 MUXes at root $abc$8416$new_n1603_.
    Found tree with 31 MUXes at root $abc$8416$new_n1569_.
    Found tree with 1 MUXes at root $abc$8416$new_n1538_.
    Found tree with 31 MUXes at root $abc$8416$new_n1536_.
    Found tree with 31 MUXes at root $abc$8416$new_n1499_.
    Found tree with 1 MUXes at root $abc$8416$new_n1468_.
    Found tree with 31 MUXes at root $abc$8416$new_n1466_.
    Found tree with 31 MUXes at root $abc$8416$new_n1432_.
    Found tree with 1 MUXes at root $abc$8416$new_n1401_.
    Found tree with 31 MUXes at root $abc$8416$new_n1399_.
    Found tree with 1 MUXes at root $abc$8416$new_n1360_.
    Found tree with 1 MUXes at root $abc$8416$new_n1313_.
    Found tree with 31 MUXes at root $abc$8416$new_n1297_.
    Found tree with 31 MUXes at root $abc$8416$new_n1256_.
    Finished treeification: Found 328 trees.
  Covering trees:
    Replaced tree at \regData [0]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [1]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [2]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [3]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [4]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [5]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [6]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [7]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [8]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [9]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [10]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [11]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [12]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [13]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [14]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [15]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [16]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [17]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [18]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [19]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [20]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [21]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [22]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [23]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [24]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [25]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [26]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [27]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [28]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [29]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [30]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \regData [31]: 2 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [9]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [10]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [11]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [12]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [13]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [14]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [15]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [16]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [17]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [18]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [19]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [20]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [21]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [22]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [23]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [24]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [25]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [26]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [27]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [28]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [29]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [30]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \r_pc.d [31]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [9]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [10]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [11]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [12]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [13]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [14]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [15]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [16]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [17]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [18]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [19]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [20]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [21]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [22]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [23]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [24]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [25]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [26]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [27]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [28]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [29]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [30]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \alu.result [31]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n5699_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n5698_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n5696_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n5694_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n5693_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n4230_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n4211_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n4194_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n4172_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n4154_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n4135_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n4118_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n4093_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n4074_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n4055_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n4038_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n4016_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3998_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3979_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3962_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3937_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3926_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3918_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3910_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3899_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3890_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3882_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3874_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3860_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3850_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3842_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3834_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3823_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3814_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3806_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3798_: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3784_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3774_: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3773_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3771_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3769_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3762_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3754_: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3753_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3751_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3749_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3739_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3730_: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3729_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3727_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3725_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3718_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3710_: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3709_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3707_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3705_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3695_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3686_: 4 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3685_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3684_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3682_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3681_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3680_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3679_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3677_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3676_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3675_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3673_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3666_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3658_: 4 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3657_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3656_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3654_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3653_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3652_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3651_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3649_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3648_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3647_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3645_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3638_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3630_: 5 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3629_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3628_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3627_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3625_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3624_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3623_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3622_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3621_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3620_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3619_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3618_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3617_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3616_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3615_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3613_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3612_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3611_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3610_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3609_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3608_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3607_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3605_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3604_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3603_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3601_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3596_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3587_: 5 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3586_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3585_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3584_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3583_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3582_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3581_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3580_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3579_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3578_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3577_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3576_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3575_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3574_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3573_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3572_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3570_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3569_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3568_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3567_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3566_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3565_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3564_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3562_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3561_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3560_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3558_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3534_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3503_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3501_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3463_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3432_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3430_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3395_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3364_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3362_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3321_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3290_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3288_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3253_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3222_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3220_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3182_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3151_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3149_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3114_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3083_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3081_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3037_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3006_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n3004_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2969_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2938_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2936_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2898_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2867_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2865_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2830_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2799_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2797_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2756_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2725_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2723_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2688_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2657_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2655_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2617_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2586_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2584_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2549_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2518_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2516_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2470_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2439_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2437_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2403_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2372_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2370_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2333_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2302_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2300_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2266_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2235_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2233_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2193_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2162_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2160_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2126_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2095_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2093_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2056_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2025_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n2023_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1989_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1958_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1956_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1913_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1882_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1880_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1846_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1815_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1813_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1776_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1745_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1743_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1709_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1678_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1676_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1636_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1605_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1603_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1569_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1538_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1536_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1499_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1468_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1466_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1432_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1401_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1399_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1360_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1313_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1297_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$8416$new_n1256_: 1 MUX2, 10 MUX4, 0 MUX8, 0 MUX16
  Added a total of 0 decoder MUXes.
<suppressed ~58533 debug messages>

15. Executing TECHMAP pass (map to technology primitives).

15.1. Executing Verilog-2005 frontend: /home/egor/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/mux4_map.v
Parsing Verilog input from `/home/egor/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/mux4_map.v' to AST representation.
Generating RTLIL representation for module `\$_MUX4_'.
Successfully finished Verilog frontend.

15.2. Continuing TECHMAP pass.
Using template \$_MUX4_ for cells of type $_MUX4_.
No more expansions possible.
<suppressed ~963 debug messages>

16. Executing SIMPLEMAP pass (map simple cells to gate primitives).

17. Executing TECHMAP pass (map to technology primitives).

17.1. Executing Verilog-2005 frontend: /home/egor/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/mux2_map.v
Parsing Verilog input from `/home/egor/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/mux2_map.v' to AST representation.
Generating RTLIL representation for module `\$_MUX_'.
Successfully finished Verilog frontend.

17.2. Continuing TECHMAP pass.
Using template \$_MUX_ for cells of type $_MUX_.
No more expansions possible.
<suppressed ~393 debug messages>

18. Executing SIMPLEMAP pass (map simple cells to gate primitives).

19. Executing TECHMAP pass (map to technology primitives).

19.1. Executing Verilog-2005 frontend: /home/egor/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/egor/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

19.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

20. Executing SIMPLEMAP pass (map simple cells to gate primitives).

21. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

21.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\sm_cpu':
  mapped 32 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_2 cells.
  mapped 1024 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

22. Printing statistics.

=== sm_cpu ===

   Number of wires:              13811
   Number of wire bits:          14962
   Number of public wires:          40
   Number of public wire bits:    1191
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4718
     $_ANDNOT_                     419
     $_AND_                         39
     $_MUX_                       1024
     $_NAND_                        89
     $_NOR_                        108
     $_NOT_                         66
     $_ORNOT_                       20
     $_OR_                         327
     $_XNOR_                       114
     $_XOR_                        106
     sky130_fd_sc_hd__dfrtp_2       32
     sky130_fd_sc_hd__dfxtp_2     1024
     sky130_fd_sc_hd__mux2_1       390
     sky130_fd_sc_hd__mux4_1       960

[INFO]: ABC: WireLoad : S_4

23. Executing ABC pass (technology mapping using ABC).

23.1. Extracting gate netlist of module `\sm_cpu' to `/tmp/yosys-abc-yRuD5i/input.blif'..
Extracted 2312 gates and 3601 wires to a netlist network with 1289 inputs and 1259 outputs.

23.1.1. Executing ABC.
Running ABC command: /build/bin/yosys-abc -s -f /tmp/yosys-abc-yRuD5i/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-yRuD5i/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-yRuD5i/input.blif 
ABC: + read_lib -w /openLANE_flow/designs/sm_cpu/runs/20-05_20-11/tmp/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.11 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/openLANE_flow/designs/sm_cpu/runs/20-05_20-11/tmp/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.16 sec
ABC: Memory =    7.77 MB. Time =     0.16 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openLANE_flow/designs/sm_cpu/runs/20-05_20-11/tmp/synthesis/yosys.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_8".
ABC: Setting output load to be 17.650000.
ABC: + read_constr /openLANE_flow/designs/sm_cpu/runs/20-05_20-11/tmp/synthesis/yosys.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 100000000 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 100000000 
ABC: + buffer -N 5 -S 10000000.0 
ABC: Node 3767 has dup fanin 1063.
ABC: Node 3767 has dup fanin 3766.
ABC: Node 3767 has dup fanin 1063.
ABC: Node 3767 has dup fanin 3766.
ABC: Node 3778 has dup fanin 1100.
ABC: Node 3778 has dup fanin 3777.
ABC: Node 3778 has dup fanin 1100.
ABC: Node 3778 has dup fanin 3777.
ABC: Node 3782 has dup fanin 1110.
ABC: Node 3782 has dup fanin 3780.
ABC: Node 3782 has dup fanin 1110.
ABC: Node 3782 has dup fanin 3780.
ABC: Node 3798 has dup fanin 1087.
ABC: Node 3798 has dup fanin 3797.
ABC: Node 3798 has dup fanin 1087.
ABC: Node 3798 has dup fanin 3797.
ABC: Node 3811 has dup fanin 1056.
ABC: Node 3811 has dup fanin 3769.
ABC: Node 3811 has dup fanin 1056.
ABC: Node 3811 has dup fanin 3769.
ABC: Node 3838 has dup fanin 3811.
ABC: Node 3838 has dup fanin 3837.
ABC: Node 3838 has dup fanin 3811.
ABC: Node 3838 has dup fanin 3837.
ABC: Node 3850 has dup fanin 3791.
ABC: Node 3850 has dup fanin 3849.
ABC: Node 3850 has dup fanin 3791.
ABC: Node 3850 has dup fanin 3849.
ABC: Node 3857 has dup fanin 3794.
ABC: Node 3857 has dup fanin 3848.
ABC: Node 3857 has dup fanin 3794.
ABC: Node 3857 has dup fanin 3848.
ABC: Node 3883 has dup fanin 3881.
ABC: Node 3883 has dup fanin 3882.
ABC: Node 3883 has dup fanin 3881.
ABC: Node 3883 has dup fanin 3882.
ABC: Node 4007 has dup fanin 3781.
ABC: Node 4007 has dup fanin 3782.
ABC: Node 4007 has dup fanin 3781.
ABC: Node 4007 has dup fanin 3782.
ABC: Node 4018 has dup fanin 1062.
ABC: Node 4018 has dup fanin 3952.
ABC: Node 4018 has dup fanin 1062.
ABC: Node 4018 has dup fanin 3952.
ABC: Node 4058 has dup fanin 1159.
ABC: Node 4058 has dup fanin 4057.
ABC: Node 4058 has dup fanin 1159.
ABC: Node 4058 has dup fanin 4057.
ABC: Node 4085 has dup fanin 1124.
ABC: Node 4085 has dup fanin 4083.
ABC: Node 4085 has dup fanin 1124.
ABC: Node 4085 has dup fanin 4083.
ABC: Node 4110 has dup fanin 2598.
ABC: Node 4110 has dup fanin 4104.
ABC: Node 4110 has dup fanin 2598.
ABC: Node 4110 has dup fanin 4104.
ABC: Node 4170 has dup fanin 2594.
ABC: Node 4170 has dup fanin 4039.
ABC: Node 4170 has dup fanin 2594.
ABC: Node 4170 has dup fanin 4039.
ABC: Node 4223 has dup fanin 4221.
ABC: Node 4223 has dup fanin 4222.
ABC: Node 4223 has dup fanin 4221.
ABC: Node 4223 has dup fanin 4222.
ABC: Node 4227 has dup fanin 4218.
ABC: Node 4227 has dup fanin 4226.
ABC: Node 4227 has dup fanin 4218.
ABC: Node 4227 has dup fanin 4226.
ABC: Node 4228 has dup fanin 4219.
ABC: Node 4228 has dup fanin 4220.
ABC: Node 4228 has dup fanin 4219.
ABC: Node 4228 has dup fanin 4220.
ABC: Node 4230 has dup fanin 4210.
ABC: Node 4230 has dup fanin 4214.
ABC: Node 4230 has dup fanin 4210.
ABC: Node 4230 has dup fanin 4214.
ABC: Node 4232 has dup fanin 4206.
ABC: Node 4232 has dup fanin 4231.
ABC: Node 4232 has dup fanin 4206.
ABC: Node 4232 has dup fanin 4231.
ABC: Node 4234 has dup fanin 4194.
ABC: Node 4234 has dup fanin 4233.
ABC: Node 4234 has dup fanin 4194.
ABC: Node 4234 has dup fanin 4233.
ABC: Node 4236 has dup fanin 4191.
ABC: Node 4236 has dup fanin 4198.
ABC: Node 4236 has dup fanin 4191.
ABC: Node 4236 has dup fanin 4198.
ABC: Node 4238 has dup fanin 4201.
ABC: Node 4238 has dup fanin 4237.
ABC: Node 4238 has dup fanin 4201.
ABC: Node 4238 has dup fanin 4237.
ABC: Node 4242 has dup fanin 4181.
ABC: Node 4242 has dup fanin 4241.
ABC: Node 4242 has dup fanin 4181.
ABC: Node 4242 has dup fanin 4241.
ABC: Node 4245 has dup fanin 4177.
ABC: Node 4245 has dup fanin 4244.
ABC: Node 4245 has dup fanin 4177.
ABC: Node 4245 has dup fanin 4244.
ABC: Node 4246 has dup fanin 4185.
ABC: Node 4246 has dup fanin 4240.
ABC: Node 4246 has dup fanin 4185.
ABC: Node 4246 has dup fanin 4240.
ABC: Node 4247 has dup fanin 4173.
ABC: Node 4247 has dup fanin 4239.
ABC: Node 4247 has dup fanin 4173.
ABC: Node 4247 has dup fanin 4239.
ABC: Node 4250 has dup fanin 4168.
ABC: Node 4250 has dup fanin 4249.
ABC: Node 4250 has dup fanin 4168.
ABC: Node 4250 has dup fanin 4249.
ABC: Node 4252 has dup fanin 4156.
ABC: Node 4252 has dup fanin 4251.
ABC: Node 4252 has dup fanin 4156.
ABC: Node 4252 has dup fanin 4251.
ABC: Node 4253 has dup fanin 4153.
ABC: Node 4253 has dup fanin 4160.
ABC: Node 4253 has dup fanin 4153.
ABC: Node 4253 has dup fanin 4160.
ABC: Node 4255 has dup fanin 4163.
ABC: Node 4255 has dup fanin 4254.
ABC: Node 4255 has dup fanin 4163.
ABC: Node 4255 has dup fanin 4254.
ABC: Node 4261 has dup fanin 4109.
ABC: Node 4261 has dup fanin 4260.
ABC: Node 4261 has dup fanin 4109.
ABC: Node 4261 has dup fanin 4260.
ABC: Node 4262 has dup fanin 4113.
ABC: Node 4262 has dup fanin 4259.
ABC: Node 4262 has dup fanin 4113.
ABC: Node 4262 has dup fanin 4259.
ABC: Node 4266 has dup fanin 4119.
ABC: Node 4266 has dup fanin 4265.
ABC: Node 4266 has dup fanin 4119.
ABC: Node 4266 has dup fanin 4265.
ABC: Node 4268 has dup fanin 4134.
ABC: Node 4268 has dup fanin 4267.
ABC: Node 4268 has dup fanin 4134.
ABC: Node 4268 has dup fanin 4267.
ABC: Node 4270 has dup fanin 4130.
ABC: Node 4270 has dup fanin 4269.
ABC: Node 4270 has dup fanin 4130.
ABC: Node 4270 has dup fanin 4269.
ABC: Node 4274 has dup fanin 4140.
ABC: Node 4274 has dup fanin 4273.
ABC: Node 4274 has dup fanin 4140.
ABC: Node 4274 has dup fanin 4273.
ABC: Node 4277 has dup fanin 4068.
ABC: Node 4277 has dup fanin 4276.
ABC: Node 4277 has dup fanin 4068.
ABC: Node 4277 has dup fanin 4276.
ABC: Node 4280 has dup fanin 4092.
ABC: Node 4280 has dup fanin 4279.
ABC: Node 4280 has dup fanin 4092.
ABC: Node 4280 has dup fanin 4279.
ABC: Node 4282 has dup fanin 4089.
ABC: Node 4282 has dup fanin 4095.
ABC: Node 4282 has dup fanin 4089.
ABC: Node 4282 has dup fanin 4095.
ABC: Node 4284 has dup fanin 4084.
ABC: Node 4284 has dup fanin 4085.
ABC: Node 4284 has dup fanin 4084.
ABC: Node 4284 has dup fanin 4085.
ABC: Node 4286 has dup fanin 4086.
ABC: Node 4286 has dup fanin 4285.
ABC: Node 4286 has dup fanin 4086.
ABC: Node 4286 has dup fanin 4285.
ABC: Node 4300 has dup fanin 2648.
ABC: Node 4300 has dup fanin 4299.
ABC: Node 4300 has dup fanin 2648.
ABC: Node 4300 has dup fanin 4299.
ABC: Node 4326 has dup fanin 1285.
ABC: Node 4326 has dup fanin 3947.
ABC: Node 4326 has dup fanin 1285.
ABC: Node 4326 has dup fanin 3947.
ABC: Node 4342 has dup fanin 1279.
ABC: Node 4342 has dup fanin 3955.
ABC: Node 4342 has dup fanin 1279.
ABC: Node 4342 has dup fanin 3955.
ABC: Node 4351 has dup fanin 1273.
ABC: Node 4351 has dup fanin 3922.
ABC: Node 4351 has dup fanin 1273.
ABC: Node 4351 has dup fanin 3922.
ABC: Node 4379 has dup fanin 1247.
ABC: Node 4379 has dup fanin 3896.
ABC: Node 4379 has dup fanin 1247.
ABC: Node 4379 has dup fanin 3896.
ABC: Node 4399 has dup fanin 4397.
ABC: Node 4399 has dup fanin 4398.
ABC: Node 4399 has dup fanin 4397.
ABC: Node 4399 has dup fanin 4398.
ABC: Node 4408 has dup fanin 4325.
ABC: Node 4408 has dup fanin 4396.
ABC: Node 4408 has dup fanin 4325.
ABC: Node 4408 has dup fanin 4396.
ABC: Node 4414 has dup fanin 4391.
ABC: Node 4414 has dup fanin 4413.
ABC: Node 4414 has dup fanin 4391.
ABC: Node 4414 has dup fanin 4413.
ABC: Node 4425 has dup fanin 4376.
ABC: Node 4425 has dup fanin 4424.
ABC: Node 4425 has dup fanin 4376.
ABC: Node 4425 has dup fanin 4424.
ABC: Node 4430 has dup fanin 4377.
ABC: Node 4430 has dup fanin 4423.
ABC: Node 4430 has dup fanin 4377.
ABC: Node 4430 has dup fanin 4423.
ABC: Node 4449 has dup fanin 4361.
ABC: Node 4449 has dup fanin 4448.
ABC: Node 4449 has dup fanin 4361.
ABC: Node 4449 has dup fanin 4448.
ABC: Node 4454 has dup fanin 4360.
ABC: Node 4454 has dup fanin 4447.
ABC: Node 4454 has dup fanin 4360.
ABC: Node 4454 has dup fanin 4447.
ABC: Node 4455 has dup fanin 4358.
ABC: Node 4455 has dup fanin 4446.
ABC: Node 4455 has dup fanin 4358.
ABC: Node 4455 has dup fanin 4446.
ABC: Node 4460 has dup fanin 4357.
ABC: Node 4460 has dup fanin 4459.
ABC: Node 4460 has dup fanin 4357.
ABC: Node 4460 has dup fanin 4459.
ABC: Node 4492 has dup fanin 4341.
ABC: Node 4492 has dup fanin 4491.
ABC: Node 4492 has dup fanin 4341.
ABC: Node 4492 has dup fanin 4491.
ABC: Node 4498 has dup fanin 4342.
ABC: Node 4498 has dup fanin 4497.
ABC: Node 4498 has dup fanin 4342.
ABC: Node 4498 has dup fanin 4497.
ABC: Node 4501 has dup fanin 4326.
ABC: Node 4501 has dup fanin 4500.
ABC: Node 4501 has dup fanin 4326.
ABC: Node 4501 has dup fanin 4500.
ABC: Node 4505 has dup fanin 4327.
ABC: Node 4505 has dup fanin 4490.
ABC: Node 4505 has dup fanin 4327.
ABC: Node 4505 has dup fanin 4490.
ABC: + upsize -D 100000000 
ABC: Current delay (7424.98 ps) does not exceed the target delay (100000000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 100000000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   2714 ( 36.6 %)   Cap = 10.2 ff (  8.6 %)   Area =    20329.50 ( 62.3 %)   Delay =  7316.19 ps  (  1.0 %)               
ABC: Path  0 --    1108 : 0    5 pi                       A =   0.00  Df =  23.2  -15.1 ps  S =  39.4 ps  Cin =  0.0 ff  Cout =  19.6 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    4438 : 1    4 sky130_fd_sc_hd__inv_2   A =   3.75  Df =  72.4   -5.7 ps  S =  71.2 ps  Cin =  4.5 ff  Cout =  14.2 ff  Cmax = 331.4 ff  G =  302  
ABC: Path  2 --    4439 : 2    3 sky130_fd_sc_hd__nor2_2  A =   6.26  Df = 221.9  -91.2 ps  S = 154.8 ps  Cin =  4.4 ff  Cout =  11.9 ff  Cmax = 141.9 ff  G =  253  
ABC: Path  3 --    4440 : 2    3 sky130_fd_sc_hd__nand2_2 A =   6.26  Df = 314.9  -98.6 ps  S =  79.5 ps  Cin =  4.4 ff  Cout =  11.7 ff  Cmax = 295.7 ff  G =  251  
ABC: Path  4 --    4441 : 2    3 sky130_fd_sc_hd__nor2_2  A =   6.26  Df = 459.3 -188.9 ps  S = 154.8 ps  Cin =  4.4 ff  Cout =  11.9 ff  Cmax = 141.9 ff  G =  253  
ABC: Path  5 --    4442 : 2    3 sky130_fd_sc_hd__nand2_2 A =   6.26  Df = 542.1 -197.4 ps  S =  63.9 ps  Cin =  4.4 ff  Cout =   8.5 ff  Cmax = 295.7 ff  G =  184  
ABC: Path  6 --    4443 : 2    3 sky130_fd_sc_hd__or2_2   A =   6.26  Df = 823.2 -367.4 ps  S =  62.4 ps  Cin =  1.5 ff  Cout =   5.4 ff  Cmax = 299.4 ff  G =  352  
ABC: Path  7 --    4444 : 2    3 sky130_fd_sc_hd__or2_2   A =   6.26  Df =1107.6 -549.1 ps  S =  62.4 ps  Cin =  1.5 ff  Cout =   5.4 ff  Cmax = 299.4 ff  G =  352  
ABC: Path  8 --    4445 : 2    4 sky130_fd_sc_hd__or2_2   A =   6.26  Df =1397.5 -730.8 ps  S =  66.1 ps  Cin =  1.5 ff  Cout =   6.8 ff  Cmax = 299.4 ff  G =  445  
ABC: Path  9 --    4451 : 4    4 sky130_fd_sc_hd__or4_2   A =   8.76  Df =1997.7-1192.3 ps  S = 140.0 ps  Cin =  1.5 ff  Cout =  13.2 ff  Cmax = 310.4 ff  G =  834  
ABC: Path 10 --    5033 : 3    4 sky130_fd_sc_hd__or3_2   A =   7.51  Df =2483.9-1530.8 ps  S = 110.5 ps  Cin =  1.5 ff  Cout =  13.2 ff  Cmax = 310.4 ff  G =  824  
ABC: Path 11 --    5034 : 3    4 sky130_fd_sc_hd__or3_2   A =   7.51  Df =2959.6-1859.2 ps  S = 110.1 ps  Cin =  1.5 ff  Cout =  13.2 ff  Cmax = 310.4 ff  G =  824  
ABC: Path 12 --    5035 : 3    3 sky130_fd_sc_hd__or3_2   A =   7.51  Df =3412.7-2181.8 ps  S =  95.9 ps  Cin =  1.5 ff  Cout =   8.5 ff  Cmax = 310.4 ff  G =  537  
ABC: Path 13 --    5036 : 2    3 sky130_fd_sc_hd__or2_2   A =   6.26  Df =3709.8-2371.1 ps  S =  62.4 ps  Cin =  1.5 ff  Cout =   5.4 ff  Cmax = 299.4 ff  G =  352  
ABC: Path 14 --    5037 : 2    3 sky130_fd_sc_hd__or2_2   A =   6.26  Df =3994.3-2552.8 ps  S =  62.4 ps  Cin =  1.5 ff  Cout =   5.4 ff  Cmax = 299.4 ff  G =  352  
ABC: Path 15 --    5038 : 2    3 sky130_fd_sc_hd__or2_2   A =   6.26  Df =4278.7-2734.5 ps  S =  62.4 ps  Cin =  1.5 ff  Cout =   5.4 ff  Cmax = 299.4 ff  G =  352  
ABC: Path 16 --    5039 : 2    4 sky130_fd_sc_hd__or2_2   A =   6.26  Df =4580.6-2916.2 ps  S =  74.1 ps  Cin =  1.5 ff  Cout =  10.0 ff  Cmax = 299.4 ff  G =  652  
ABC: Path 17 --    5040 : 3    3 sky130_fd_sc_hd__or3_2   A =   7.51  Df =5022.2-3232.3 ps  S =  95.9 ps  Cin =  1.5 ff  Cout =   8.5 ff  Cmax = 310.4 ff  G =  537  
ABC: Path 18 --    5041 : 2    3 sky130_fd_sc_hd__or2_2   A =   6.26  Df =5319.4-3421.5 ps  S =  62.4 ps  Cin =  1.5 ff  Cout =   5.4 ff  Cmax = 299.4 ff  G =  352  
ABC: Path 19 --    5042 : 2    3 sky130_fd_sc_hd__or2_2   A =   6.26  Df =5603.8-3603.3 ps  S =  62.4 ps  Cin =  1.5 ff  Cout =   5.4 ff  Cmax = 299.4 ff  G =  352  
ABC: Path 20 --    5043 : 2    3 sky130_fd_sc_hd__or2_2   A =   6.26  Df =5888.2-3785.0 ps  S =  62.4 ps  Cin =  1.5 ff  Cout =   5.4 ff  Cmax = 299.4 ff  G =  352  
ABC: Path 21 --    5044 : 2    3 sky130_fd_sc_hd__or2_2   A =   6.26  Df =6172.6-3966.7 ps  S =  62.4 ps  Cin =  1.5 ff  Cout =   5.4 ff  Cmax = 299.4 ff  G =  352  
ABC: Path 22 --    5045 : 2    3 sky130_fd_sc_hd__or2_2   A =   6.26  Df =6456.8-4148.4 ps  S =  62.2 ps  Cin =  1.5 ff  Cout =   5.3 ff  Cmax = 299.4 ff  G =  348  
ABC: Path 23 --    5046 : 2    2 sky130_fd_sc_hd__or2_2   A =   6.26  Df =6744.3-4330.3 ps  S =  64.5 ps  Cin =  1.5 ff  Cout =   6.1 ff  Cmax = 299.4 ff  G =  404  
ABC: Path 24 --    5048 : 2    2 sky130_fd_sc_hd__or2_2   A =   6.26  Df =7036.6-4511.6 ps  S =  67.2 ps  Cin =  1.5 ff  Cout =   7.2 ff  Cmax = 299.4 ff  G =  471  
ABC: Path 25 --    5049 : 5    1 sky130_fd_sc_hd__a32o_2  A =  11.26  Df =7316.2 -275.7 ps  S = 123.7 ps  Cin =  2.3 ff  Cout =  17.6 ff  Cmax = 264.6 ff  G =  755  
ABC: Start-point = pi1107 ($abc$8416$new_n3503_).  End-point = po1183 ($abc$8416$new_n4229_).
ABC: + print_stats -m 
ABC: netlist                       : i/o = 1289/ 1259  lat =    0  nd =  2714  edge =   7295  area =20327.22  delay =35.00  lev = 35
ABC: + write_blif /tmp/yosys-abc-yRuD5i/output.blif 

23.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:       21
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:     1067
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_2 cells:       35
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:      752
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:      240
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:       48
ABC RESULTS:   sky130_fd_sc_hd__nand2b_2 cells:       32
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:       37
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o2111a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:       29
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:       67
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__o221ai_2 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:       64
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__o2bb2ai_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:      109
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:       27
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:       28
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:        1
ABC RESULTS:        internal signals:     1053
ABC RESULTS:           input signals:     1289
ABC RESULTS:          output signals:     1259
Removing temp directory.

24. Executing SETUNDEF pass (replace undef values with defined constants).

25. Executing HILOMAP pass (mapping to constant drivers).

26. Executing SPLITNETS pass (splitting up multi-bit signals).

27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sm_cpu..
Removed 0 unused cells and 13806 unused wires.
<suppressed ~1 debug messages>

28. Executing INSBUF pass (insert buffer cells for connected wires).

29. Executing CHECK pass (checking for obvious problems).
checking module sm_cpu..
Warning: Wire sm_cpu.\regData [31] is used but has no driver.
Warning: Wire sm_cpu.\regData [30] is used but has no driver.
Warning: Wire sm_cpu.\regData [29] is used but has no driver.
Warning: Wire sm_cpu.\regData [28] is used but has no driver.
Warning: Wire sm_cpu.\regData [27] is used but has no driver.
Warning: Wire sm_cpu.\regData [26] is used but has no driver.
Warning: Wire sm_cpu.\regData [25] is used but has no driver.
Warning: Wire sm_cpu.\regData [24] is used but has no driver.
Warning: Wire sm_cpu.\regData [23] is used but has no driver.
Warning: Wire sm_cpu.\regData [22] is used but has no driver.
Warning: Wire sm_cpu.\regData [21] is used but has no driver.
Warning: Wire sm_cpu.\regData [20] is used but has no driver.
Warning: Wire sm_cpu.\regData [19] is used but has no driver.
Warning: Wire sm_cpu.\regData [18] is used but has no driver.
Warning: Wire sm_cpu.\regData [17] is used but has no driver.
Warning: Wire sm_cpu.\regData [16] is used but has no driver.
Warning: Wire sm_cpu.\regData [15] is used but has no driver.
Warning: Wire sm_cpu.\regData [14] is used but has no driver.
Warning: Wire sm_cpu.\regData [13] is used but has no driver.
Warning: Wire sm_cpu.\regData [12] is used but has no driver.
Warning: Wire sm_cpu.\regData [11] is used but has no driver.
Warning: Wire sm_cpu.\regData [10] is used but has no driver.
Warning: Wire sm_cpu.\regData [9] is used but has no driver.
Warning: Wire sm_cpu.\regData [8] is used but has no driver.
Warning: Wire sm_cpu.\regData [7] is used but has no driver.
Warning: Wire sm_cpu.\regData [6] is used but has no driver.
Warning: Wire sm_cpu.\regData [5] is used but has no driver.
Warning: Wire sm_cpu.\regData [4] is used but has no driver.
Warning: Wire sm_cpu.\regData [3] is used but has no driver.
Warning: Wire sm_cpu.\regData [2] is used but has no driver.
Warning: Wire sm_cpu.\regData [1] is used but has no driver.
Warning: Wire sm_cpu.\regData [0] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [31] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [30] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [29] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [28] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [27] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [26] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [25] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [24] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [23] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [22] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [21] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [20] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [19] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [18] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [17] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [16] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [15] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [14] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [13] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [12] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [11] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [10] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [9] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [8] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [7] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [6] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [5] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [4] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [3] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [2] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [1] is used but has no driver.
Warning: Wire sm_cpu.\imAddr [0] is used but has no driver.
found and reported 64 problems.

30. Printing statistics.

=== sm_cpu ===

   Number of wires:               5062
   Number of wire bits:           5159
   Number of public wires:        1094
   Number of public wire bits:    1191
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5120
     sky130_fd_sc_hd__a211o_2        3
     sky130_fd_sc_hd__a21bo_2       21
     sky130_fd_sc_hd__a21o_2        10
     sky130_fd_sc_hd__a21oi_2        4
     sky130_fd_sc_hd__a221o_2        5
     sky130_fd_sc_hd__a22o_2      1067
     sky130_fd_sc_hd__a2bb2o_2       5
     sky130_fd_sc_hd__a2bb2oi_2     35
     sky130_fd_sc_hd__a31o_2         8
     sky130_fd_sc_hd__a31oi_2        2
     sky130_fd_sc_hd__a32o_2         4
     sky130_fd_sc_hd__and2_2         6
     sky130_fd_sc_hd__and3_2         3
     sky130_fd_sc_hd__and4_2         1
     sky130_fd_sc_hd__buf_1        752
     sky130_fd_sc_hd__dfrtp_2       32
     sky130_fd_sc_hd__dfxtp_2     1024
     sky130_fd_sc_hd__inv_2        240
     sky130_fd_sc_hd__mux2_1       390
     sky130_fd_sc_hd__mux4_1       960
     sky130_fd_sc_hd__nand2_2       48
     sky130_fd_sc_hd__nand2b_2      32
     sky130_fd_sc_hd__nor2_2        37
     sky130_fd_sc_hd__nor3_2         6
     sky130_fd_sc_hd__nor4_2         1
     sky130_fd_sc_hd__o2111a_2       3
     sky130_fd_sc_hd__o211a_2        3
     sky130_fd_sc_hd__o21a_2        29
     sky130_fd_sc_hd__o21ai_2       67
     sky130_fd_sc_hd__o221a_2       12
     sky130_fd_sc_hd__o221ai_2      20
     sky130_fd_sc_hd__o22a_2        64
     sky130_fd_sc_hd__o22ai_2       17
     sky130_fd_sc_hd__o2bb2a_2      17
     sky130_fd_sc_hd__o2bb2ai_2      3
     sky130_fd_sc_hd__o311a_2        2
     sky130_fd_sc_hd__o31a_2         9
     sky130_fd_sc_hd__o31ai_2        1
     sky130_fd_sc_hd__o32a_2         3
     sky130_fd_sc_hd__or2_2        109
     sky130_fd_sc_hd__or2b_2         1
     sky130_fd_sc_hd__or3_2         27
     sky130_fd_sc_hd__or3b_2         1
     sky130_fd_sc_hd__or4_2         28
     sky130_fd_sc_hd__or4b_2         7
     sky130_fd_sc_hd__or4bb_2        1

   Chip area for module '\sm_cpu': 72567.097600

31. Executing Verilog backend.
Dumping module `\sm_cpu'.

Warnings: 64 unique messages, 64 total
End of script. Logfile hash: d5562ff1b0, CPU: user 8.75s system 0.02s, MEM: 56.82 MB peak
Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)
Time spent: 42% 2x abc (6 sec), 20% 2x write_verilog (2 sec), ...
